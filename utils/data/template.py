templates = {
    "COGS": [
        "Parse {input} into COGS meaning representation: {output}.",
        "Using COGS, break down {input} to identify semantic roles like agent and theme, then represent them in a structured format: {output}.",
        "Represent {input} formally in COGS, capturing both its core arguments and relational structure: {output}.",
        "What is the COGS meaning representation of {input}? Provide a detailed structured output: {output}.",
        "Break apart {input} into semantic arguments and express their relationships as a COGS structure: {output}.",
        "Using a COGS framework, parse {input} to highlight predicates, agents, and recipients: {output}.",
        "For the given sentence, {input}, provide its semantic breakdown in COGS representation: {output}.",
        "Translate {input} into a meaning structure: {output}, using COGS formalism and focusing on spatial relationships.",
        "What is the structured representation of {input} in COGS? {output} is the result.",
        "Extract agent, theme, and other key arguments from {input} to generate {output} using COGS representation.",
        "Apply COGS rules to map {input} into {output}, a structured meaning format emphasizing its modifiers.",
        "Given the input sentence, {output} represents the encoded roles from {input} in COGS representation.",
        "Using COGS semantics, parse {input} to include relations between predicates and arguments: the result is {output}.",
        "Create {output}, a formal representation in COGS for the sentence {input}, capturing detailed relationships.",
        "Transform {input} into {output}, its semantic structure with a COGS format that includes spatial details.",
        "Reformulate {input} into {output}, a COGS meaning representation that specifies all relevant arguments.",
        "Analyze {input} to produce {output}, a COGS structure emphasizing its core meaning.",
        "How would {input} be represented in COGS? The semantic representation is {output}.",
        "Highlight the predicates and relationships in {input}: {output} encodes them into COGS semantics.",
        "Break {input} into {output}, a structured COGS format that includes agent, theme, and modifiers.",
        "Reframe the sentence {input} into {output}, its formal COGS representation focusing on argument relationships.",
        "For the input {input}, create a COGS meaning structure that maps its arguments precisely: {output}.",
        "What does {input} look like in COGS semantics? Include detailed relational clauses: {output}.",
        "Analyze {input} to identify key semantic components and represent them in COGS format: {output}.",
        "Map {input} to a formal structure using COGS, focusing on its roles and relational predicates: {output}.",
        "Decompose {input} into semantic components and encode them as a COGS representation: {output}.",
        "Using COGS principles, generate a structured meaning for {input} with modifiers: {output}.",
        "How would COGS capture the relationships in {input}? Provide the structured representation: {output}.",
        "From {input}, derive a semantic structure using COGS that highlights key roles: {output}.",
        "Given the sentence {input}, use COGS to create a formal representation of its meaning: {output}.",
        "For the sentence {input}, construct its COGS semantic structure focusing on spatial modifiers: {output}.",
        "Identify the semantic arguments in {input} and map them into a COGS representation: {output}.",
        "Reinterpret {input} into a structured COGS format capturing agent-recipient dynamics: {output}.",
        "Generate a formal COGS structure for the sentence {input}, specifying all predicates: {output}.",
        "How can {input} be represented in COGS semantics? Provide its structured output: {output}.",
        "Parse {input} into a formal COGS representation highlighting semantic roles like agent and theme: {output}.",
        "Express the relationships in {input} using a detailed COGS structure: {output}.",
        "Using COGS semantics, decompose {input} into a meaning representation focusing on arguments: {output}.",
        "Generate a structured representation in COGS for the input sentence {input}, including all modifiers: {output}.",
        "Apply COGS to {input} and derive its semantic roles and relationships: {output}.",
        "Convert {input} into its COGS format focusing on predicates and argument structure: {output}.",
        "Analyze the input {input} and create a meaning representation in COGS highlighting its roles: {output}.",
        "Break apart {input} to identify its components and express them as a COGS structure: {output}.",
        "Using COGS rules, represent {input} formally, capturing agent and recipient relations: {output}.",
        "Given the input {input}, create a COGS meaning representation that captures predicates: {output}.",
        "Reconstruct {input} into a formal COGS structure highlighting spatial relationships: {output}.",
        "How would the input {input} be structured using COGS semantics? Provide its meaning representation: {output}.",
        "Parse {input} into a structured COGS format focusing on its arguments and their relationships: {output}.",
        "For {input}, create a COGS semantic representation that specifies agents, themes, and modifiers: {output}.",
        "Using COGS, encode the relationships and semantic arguments from {input} into a structured format: {output}.",
        "Map {input} to a formal COGS structure capturing its meaning systematically: {output}.",
        "{output}: This is the COGS representation of the sentence {input}.",
        "{output} represents the meaning of {input} in a structured COGS format.",
        "{output} is the formal COGS representation capturing the roles and relationships in {input}.",
        "This is the COGS meaning representation: {output}. It captures the meaning of the sentence {input}.",
        "{output} provides the semantic structure for {input}. Parse the arguments and roles accordingly.",
        "Here is the structured meaning: {output}. The input sentence was {input}.",
        "{output} captures the relationships in {input}. Use this representation for semantic parsing.",
        "The formal structure is {output}, which represents the sentence {input} in COGS format.",
        "{output} is derived from {input}. This captures the relationships between predicates and roles.",
        "Using COGS, {output} is the semantic representation of the sentence {input}.",
        "Semantic roles are captured as {output}. The input sentence was {input}.",
        "{output} is the structured output for the input {input}, including agents and themes.",
        "The semantic structure is {output}. It maps directly to the sentence {input}.",
        "{output} encodes the meaning of {input}, focusing on arguments and relations.",
        "In COGS, {output} represents the sentence {input}, emphasizing relational predicates.",
        "{output} formalizes the input {input}, capturing its roles and relationships.",
        "{output} expresses the semantic roles in {input}, including modifiers and agents.",
        "The meaning representation is {output}. The corresponding sentence is {input}.",
        "Mapped meaning: {output}. This representation corresponds to the sentence {input}.",
        "{output} is the result of parsing the input {input} into a COGS structure.",
        "{output}: This is the structured representation derived from {input}.",
        "Representing {input} in COGS yields {output}, a structured semantic format.",
        "{output} contains the formal meaning of {input}, with roles and arguments included.",
        "The input sentence is {input}, and its meaning representation in COGS is {output}.",
        "{output} provides the structure for {input}. This captures predicates and arguments.",
        "For {input}, {output} is the formal COGS representation focusing on relationships.",
        "{output} contains the agent and recipient roles for the sentence {input}.",
        "Here is the structured output: {output}. This is derived from {input}.",
        "{output} is the COGS representation for {input}, with detailed spatial relations.",
        "The semantic structure is {output}. It corresponds to the sentence {input}.",
        "{output} encodes the input {input}, including agents, themes, and modifiers.",
        "In COGS, {output} represents {input}, capturing its semantic arguments precisely.",
        "Derived structure: {output}. This is the meaning representation of {input}.",
        "Given {input}, the COGS representation is {output}. This includes key arguments.",
        "{output}: This is the output for the sentence {input} based on semantic parsing.",
        "{output} represents the relationships and roles in {input} systematically.",
        "The result is {output}. It represents the meaning of the input {input}.",
        "{output} is the structured semantic form derived from the sentence {input}.",
        "{output} reflects the meaning of {input}, focusing on agent and recipient roles.",
        "{output} is the formal output for {input}, highlighting its relational structure.",
        "Semantic arguments are mapped in {output}. The input sentence is {input}.",
        "{output} captures the meaning of {input}, emphasizing spatial relationships.",
        "This structure, {output}, formalizes the semantic roles in the sentence {input}.",
        "The output is {output}. It organizes the meaning of {input} in COGS format.",
        "{output} is the result of parsing {input} into a structured semantic format.",
        "The structured format is {output}. It corresponds to the input {input}.",
        "{output} maps the relationships in {input} into a formal semantic structure.",
        "{output} includes the modifiers and arguments from the sentence {input}.",
        "The input {input} is represented as {output} in COGS, capturing predicates.",
        "{output} is the semantic breakdown of {input}, focusing on core arguments.",
        "{output} organizes the input {input} into a COGS semantic format.",
    ]
}

print(len(templates["COGS"]))